#!/usr/bin/env perl

use 5.010;
use strict;
use warnings;

use Getopt::Long;

use constant {
    BRANCH_TYPES => {
        fix   => ':wrench:',
        chore => ':broom:',
        default => ':zap:',
    },
};

GetOptions(
    'dry-run' => \ my $dry_run,
);

if ($dry_run) {
    say '<dry run>';
    say 'PR title: ' . &title;
    say &body;
} else {
    &create_pr;
}

# ------------------------------------

#
# Get current branch information
#
# {
#   full => 'feature/JIRA-123-super-branch',
#   type => 'feature',
#   description => 'super-branch',
#   issue => 'JIRA-123',
# }
#
sub git_branch {
    state $output = `git rev-parse --abbrev-ref HEAD 2>/dev/null`;
    chomp($output);

    $output =~ m/(\w+)\/(?:([A-Z]+-\d+)-)?(.*)/;
    my ($type, $issue, $description) = ($1, $2, $3);

    if (defined $description) {
        $description =~ s/-/ /g;
        # $description = ucfirst($description);
    }

    return {
        full => $output,
        type => $type,
        # description => $description,
        description => "$type: $description",
        issue => $issue,
    };
}

sub title {
    my $info = &git_branch;

    if (defined $info->{description}) {
        return $info->{description};
    } else {
        return ucfirst($info->{full});
    }
}

sub issue_type {
    my $info = &git_branch;

    BRANCH_TYPES->{$info->{type}} || BRANCH_TYPES->{default};
}

# Remove starting and trailing whitespaces
sub trim { my ($str) = @_; $str =~ s/^\s+|\s+$//; $str; }

sub body {
    my $info = &git_branch;
    my $issue_type = &issue_type;

    my $issue = $info->{issue};
    if (!$issue) {
        print 'Issue: ';
        $issue = <>;
        chomp($issue);
    }

    my @lines;

    if ($issue) {
        push @lines, "Closes ${issue}"
    }

    # PR common template
    push @lines, <<~EOF;

    **${issue_type} Summary**

    EOF

    trim(join("\n", @lines));
}

sub create_pr {
    my ($title, $body) = (&title, &body);

    system("GITHUB_TOKEN= gh pr create --draft --body='${body}' --title='${title}'");
    say 'Opening PR in a second...';
    sleep 1;
    exec('gh pr view --web')
}
